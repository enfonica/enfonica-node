// Copyright 2020 Enfonica Pty Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package enfonica.numbering.v1beta1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option cc_enable_arenas = true;
option csharp_namespace = "Enfonica.Numbering.V1Beta1";
option go_package = "github.com/enfonica/enfonica-go/numbering/v1beta1;numbering";
option java_multiple_files = true;
option java_outer_classname = "PhoneNumbersProto";
option java_package = "com.enfonica.numbering.v1beta1";
option objc_class_prefix = "ENFON";

// Manages PhoneNumbers.
service PhoneNumbers {
  option (google.api.default_host) = "numbering.api.enfonica.com";
  option (google.api.oauth_scopes) =
      "https://api.enfonica.com/auth/numbering";

  // Searches available phone numbers with the specified filters.
  //
  // Search returns phone numbers sorted by create_time descending.
  //
  // The caller must be authenticated.
  rpc SearchPhoneNumbers(SearchPhoneNumbersRequest) returns (SearchPhoneNumbersResponse) {
    option (google.api.http) = {
      get: "/v1beta1/phoneNumbers:search"
    };
  }
}

// The PhoneNumber resource.
message PhoneNumber {
  option (google.api.resource) = {
    type: "numbering.api.enfonica.com/PhoneNumber"
    pattern: "phoneNumbers/{phone_number}"
  };

  // A capability of a phone number.
  enum PhoneNumberCapability {
    // Unspecified phone number capability.
    PHONE_NUMBER_CAPABILITY_UNSPECIFIED = 0;

    // The phone number is capable of SMS.
    SMS = 1;

    // The phone number is capable of MMS.
    MMS = 2;

    // The phone number is capable of voice.
    VOICE = 4;
  }

  // The type of phone number.
  enum PhoneNumberType {
    // Unspecified phone number type.
    PHONE_NUMBER_TYPE_UNSPECIFIED = 0;

    // The phone number is a local phone number and corresponds to
    // a specific geography within a country.
    LOCAL = 1;

    // The phone number is a national phone number and is independent
    // of geography within a country.
    NATIONAL = 2;

    // The phone number is a mobile-only phone number and is independent
    // of geography within a country.
    MOBILE = 3;

    // The phone number is a toll-free number, where the caller can call
    // the number typically without any cost to the caller.
    TOLL_FREE = 4;

    // The phone number is a shared-rate number, where both the caller
    // and holder of the phone number both typically share in the cost
    // of calls to the phone number.
    SHARED_RATE = 5;
  }

  // Resource name of the phone number. It must match the pattern
  // `phoneNumbers/*`
  string name = 1;

  // The phone number, in +E164 format.
  string phone_number = 2;

  // The capabilities of the phone number.
  repeated PhoneNumberCapability capabilities = 3;

  // The SKU that will be used to bill the phone number.
  // In the form `services/*/skus/*`.
  string sku = 4;

  // The type of phone number.
  PhoneNumberType number_type = 10;

  // The alpha-2 country code that identifies the country associated with
  // the phone number.
  // (-- api-linter: core::0143::standardized-codes=disabled
  //     aip.dev/not-precedent: Country code is used in this beta. --)
  string country_code = 11;
}

// The SearchPhoneNumbers request.
message SearchPhoneNumbersRequest {
  // The maximum number of PhoneNumbers to return in the response.
  // Default value of 10 and maximum value of 100.
  int32 page_size = 1;

  // A pagination token returned from a previous call to `SearchPhoneNumbers`
  // that indicates where this listing should continue from.
  string page_token = 2;

  // The type of phone number.
  PhoneNumber.PhoneNumberType number_type = 4;

  // The alpha-2 country code that identifies the country associated with
  // the phone number.
  // (-- api-linter: core::0143::standardized-codes=disabled
  //     aip.dev/not-precedent: Country code is used in this beta. --)
  string country_code = 5 [(google.api.field_behavior) = REQUIRED];

  // The prefix that the number must have after the country code. If the
  // prefix starts with '0', it will be automatically removed.
  string prefix = 6;

  // If true, the phone number must support voice.
  bool supports_voice = 7;

  // If true, the phone number must support SMS.
  bool supports_sms = 8;

  // If true, the phone number must support MMS.
  bool supports_mms = 9;  
}

// The SearchPhoneNumbers response.
message SearchPhoneNumbersResponse {
  // A possibly paginated list of PhoneNumbers.
  repeated PhoneNumber phone_numbers = 1;

  // A pagination token returned from a previous call to `SearchPhoneNumbers`
  // that indicates from where listing should continue.
  string next_page_token = 2;
}
